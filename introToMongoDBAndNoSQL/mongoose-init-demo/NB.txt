when you have to use POST to save in DB:
    router.post('/create', async (req, res) => {
    --->let savedMovie = await Movie.create(req.body);<---
        console.log(savedMovie);
        res.redirect('/movies');
    })

MIND that Schema determines the setup so follow it with POST request exactly!
otherwise ->   const castError = new CastError();
                    ^
CastError: Cast to ObjectId failed for value "create" (type string) at path "_id" for model "Movie"

1:40:00 
The first argument is the singular name of the collection your model is for. 
Mongoose automatically looks for the plural, lowercased version of your model name. Thus, 
for the example above, the model Tank is for the tanks collection in the database.
=> mongoose.model('Movie', movieSchema) => 'Movie' === movies

your DB is movieSuggester
your collection is movies
=>
mongoose.connect('mongodb://localhost:27017/movieSuggester'); in index.js

const Movie = mongoose.model('Movie', movieSchema); in Model.js

